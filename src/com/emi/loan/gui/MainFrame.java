/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.emi.loan.gui;

import com.emi.loan.Calc;
import com.emi.loan.EMI;
import com.emi.loan.Loan;
import com.emi.loan.util.Utilities;
import com.java.reports.ProvisionalChart;
import com.java.reports.SummaryPieReport;
import de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel;
import de.javasoft.plaf.synthetica.SyntheticaWhiteVisionLookAndFeel;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Arun
 */
public class MainFrame extends javax.swing.JFrame {

    private DefaultTableModel dft;

    private double t_principal;
    private double t_roi;
    private int t_period;

    private double t_prepaid;

    private List<EMI> ls_EMI;
    TableColumnModel colModel;

    private Loan ln;

    private Map<String, String> ln_info = new HashMap<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/emi/loan/img/emi_icon.png")));
        dft = (DefaultTableModel) tb_emi.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_principal = new javax.swing.JTextField();
        txt_roi = new javax.swing.JTextField();
        txt_period = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_calc = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_emi = new javax.swing.JTable();
        btn_prnt = new javax.swing.JButton();
        btn_close = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lb_intPaid = new javax.swing.JLabel();
        lb_prnPaid = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lb_Paid = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tx_prepaid = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btn_export = new javax.swing.JButton();
        steelCheckBox1 = new eu.hansolo.custom.SteelCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        mn_File = new javax.swing.JMenu();
        mn_Exit = new javax.swing.JMenuItem();
        mn_Report = new javax.swing.JMenu();
        mn_Summary = new javax.swing.JMenuItem();
        mn_Prvsnl = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        theme_Motif = new javax.swing.JMenuItem();
        theme_Nimbus = new javax.swing.JMenuItem();
        theme_AluOxide = new javax.swing.JMenuItem();
        theme_default = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EMI CALCULATOR");

        jLabel1.setText("Principal Amount");

        jLabel2.setText("Rate of Interest");

        jLabel3.setText("Period");

        txt_period.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_periodActionPerformed(evt);
            }
        });

        jLabel4.setText("* INR");

        jLabel5.setText("* % P.A");

        jLabel6.setText("* months");

        btn_calc.setMnemonic('C');
        btn_calc.setText("Calculate");
        btn_calc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_calcMouseClicked(evt);
            }
        });
        btn_calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcActionPerformed(evt);
            }
        });

        btn_reset.setMnemonic('R');
        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("EMI Table:");

        tb_emi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No", "EMI", "Interest ", "Principal ", "Loan Outstand.", "Period Remain.", "Int. Opt", "Prn. Opt", "Loan Opt"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_emi.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(tb_emi);
        if (tb_emi.getColumnModel().getColumnCount() > 0) {
            tb_emi.getColumnModel().getColumn(0).setResizable(false);
            tb_emi.getColumnModel().getColumn(0).setPreferredWidth(20);
            tb_emi.getColumnModel().getColumn(1).setResizable(false);
            tb_emi.getColumnModel().getColumn(1).setPreferredWidth(50);
            tb_emi.getColumnModel().getColumn(2).setResizable(false);
            tb_emi.getColumnModel().getColumn(3).setResizable(false);
            tb_emi.getColumnModel().getColumn(4).setResizable(false);
            tb_emi.getColumnModel().getColumn(5).setResizable(false);
            tb_emi.getColumnModel().getColumn(6).setResizable(false);
            tb_emi.getColumnModel().getColumn(7).setResizable(false);
            tb_emi.getColumnModel().getColumn(8).setResizable(false);
        }

        btn_prnt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/emi/loan/img/print.png"))); // NOI18N
        btn_prnt.setMnemonic('P');
        btn_prnt.setText("Print");
        btn_prnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prntActionPerformed(evt);
            }
        });

        btn_close.setMnemonic('X');
        btn_close.setText("Close");
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel8.setText("* fields are mandatory..");

        jLabel9.setText("Total Interest Paid: ");

        lb_intPaid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_intPaid.setForeground(new java.awt.Color(255, 51, 0));
        lb_intPaid.setText("0.0");

        lb_prnPaid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lb_prnPaid.setForeground(new java.awt.Color(0, 102, 255));
        lb_prnPaid.setText("0.0");

        jLabel10.setText("Total Principal Paid: ");

        jLabel11.setText("Total Paid: ");

        lb_Paid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_Paid.setForeground(new java.awt.Color(0, 153, 153));
        lb_Paid.setText("0.0");

        jLabel12.setText("Prepaid Amount");

        tx_prepaid.setText("0");

        jLabel13.setText("in months");

        btn_export.setMnemonic('e');
        btn_export.setText("Export");
        btn_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exportActionPerformed(evt);
            }
        });

        steelCheckBox1.setText("steelCheckBox1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_calc)
                        .addGap(18, 18, 18)
                        .addComponent(btn_reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_roi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(txt_period, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(80, 80, 80)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tx_prepaid, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_principal, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lb_intPaid)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lb_prnPaid)
                                .addGap(143, 143, 143)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_Paid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_close)
                                .addGap(82, 82, 82))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 44, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(steelCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_export)
                                .addGap(32, 32, 32)
                                .addComponent(btn_prnt)))
                        .addGap(67, 67, 67))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_roi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_period, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12)
                    .addComponent(tx_prepaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_calc)
                    .addComponent(btn_reset)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btn_prnt)
                    .addComponent(btn_export)
                    .addComponent(steelCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lb_intPaid))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_close)
                    .addComponent(lb_prnPaid)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(lb_Paid))
                .addGap(57, 57, 57))
        );

        mn_File.setText("File");

        mn_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        mn_Exit.setText("Exit");
        mn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_ExitActionPerformed(evt);
            }
        });
        mn_File.add(mn_Exit);

        mn_Report.setText("Reports");
        mn_Report.setEnabled(false);

        mn_Summary.setText("Summary");
        mn_Summary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_SummaryActionPerformed(evt);
            }
        });
        mn_Report.add(mn_Summary);

        mn_Prvsnl.setText("Provisional");
        mn_Prvsnl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_PrvsnlActionPerformed(evt);
            }
        });
        mn_Report.add(mn_Prvsnl);

        mn_File.add(mn_Report);

        jMenuBar1.add(mn_File);

        jMenu2.setText("Tools");

        jMenu3.setText("Themes");

        theme_Motif.setText("Windows");
        theme_Motif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theme_MotifActionPerformed(evt);
            }
        });
        jMenu3.add(theme_Motif);

        theme_Nimbus.setText("Nimbus");
        theme_Nimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theme_NimbusActionPerformed(evt);
            }
        });
        jMenu3.add(theme_Nimbus);

        theme_AluOxide.setText("Alu Oxide");
        theme_AluOxide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theme_AluOxideActionPerformed(evt);
            }
        });
        jMenu3.add(theme_AluOxide);

        theme_default.setText("Default");
        theme_default.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theme_defaultActionPerformed(evt);
            }
        });
        jMenu3.add(theme_default);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    private class MyCellRenderer extends DefaultTableCellRenderer {
//
//        @Override
//        public Component getTableCellRendererComponent(JTable table,
//                Object value,
//                boolean isSelected,
//                boolean hasFocus,
//                int row,
//                int column) {
//            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
//
//            setToolTipText("EMI TABLE");
//            return this;
//        }
//    }
//    private class RowColumnListSelectionListener implements ListSelectionListener {
//
//        @Override
//        public void valueChanged(ListSelectionEvent e) {
//            if (tb_emi.getRowSelectionAllowed()
//                    && !tb_emi.getColumnSelectionAllowed()) {
//                int[] rows = tb_emi.getSelectedRows();
//                System.out.println("Selected Rows: " + Arrays.toString(rows));
//            }
//            if (tb_emi.getColumnSelectionAllowed()
//                    && !tb_emi.getRowSelectionAllowed()) {
//                int[] cols = tb_emi.getSelectedColumns();
//                System.out.println("Selected Columns: " + Arrays.toString(cols));
//            } else if (tb_emi.getCellSelectionEnabled()) {
//                int selectionMode = tb_emi.getSelectionModel().getSelectionMode();
//                 double val = 0;
//                System.out.println("selectionMode = " + selectionMode);
//                if (selectionMode == ListSelectionModel.SINGLE_SELECTION) {
//                    int rowIndex = tb_emi.getSelectedRow();
//                    int colIndex = tb_emi.getSelectedColumn();
//                     val +=Double.parseDouble(tb_emi.getValueAt(rowIndex, colIndex).toString());
//                                System.out.println(val);
////                    System.out.printf("Selected [Row,Column] = [%d,%d]n", rowIndex, colIndex);
//                } else if (selectionMode == ListSelectionModel.SINGLE_INTERVAL_SELECTION
//                        || selectionMode == ListSelectionModel.MULTIPLE_INTERVAL_SELECTION) {
//                    int rowIndexStart = tb_emi.getSelectedRow();
//                    int rowIndexEnd = tb_emi.getSelectionModel().getMaxSelectionIndex();
//                    int colIndexStart = tb_emi.getSelectedColumn();
//                    int colIndexEnd = tb_emi.getColumnModel().getSelectionModel().getMaxSelectionIndex();
//                   
//                    for (int i = rowIndexStart; i <= rowIndexEnd; i++) {
//                        for (int j = colIndexStart; j <= colIndexEnd; j++) {
//                            if (tb_emi.isCellSelected(i, j)) {
//                                val +=Double.parseDouble(tb_emi.getValueAt(i, j).toString());
//                                System.out.println(val);
////                                System.out.printf("Selected [Row,Column] = [%d,%d]n", i, j);
//                            }
//                        }
//                    }
//                }
//            }else{
//                System.out.println("Hitting here....");
//            }
//
//        }
//    }

    private void theme_MotifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theme_MotifActionPerformed
//        applyTheme("Windows");
        Utilities.applyTheme("Windows", this);
    }//GEN-LAST:event_theme_MotifActionPerformed

    private void theme_NimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theme_NimbusActionPerformed
//        applyTheme("Nimbus");
        Utilities.applyTheme("Nimbus", this);
    }//GEN-LAST:event_theme_NimbusActionPerformed

    private void mn_SummaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_SummaryActionPerformed
        // TODO add your handling code here:
        SummaryPieReport sum = new SummaryPieReport();
        sum.generateReport().showReport(null, 1024, 720);
    }//GEN-LAST:event_mn_SummaryActionPerformed

    private void mn_PrvsnlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_PrvsnlActionPerformed
        ProvisionalChart prvChart = new ProvisionalChart(ls_EMI);
        prvChart.generateReport().showReport(null, 1024, 720);
    }//GEN-LAST:event_mn_PrvsnlActionPerformed

    private void theme_AluOxideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theme_AluOxideActionPerformed
        try {
            Utilities.applySyntheticaTheme(new SyntheticaAluOxideLookAndFeel(), this);
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_theme_AluOxideActionPerformed

    private void mn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_ExitActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Do you want to exit the application?", "Exit - EMI Calculator", JOptionPane.YES_NO_OPTION) == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_mn_ExitActionPerformed

    private void theme_defaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theme_defaultActionPerformed
        try {
            Utilities.applySyntheticaTheme(new SyntheticaWhiteVisionLookAndFeel(), this);
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_theme_defaultActionPerformed

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        mn_ExitActionPerformed(evt);
    }//GEN-LAST:event_btn_closeActionPerformed

    private void btn_prntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prntActionPerformed
        if (tb_emi.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Please calculate EMI beore printing!", "Warning - Data not printed ", JOptionPane.WARNING_MESSAGE);
            return;
        }
        StringBuilder stBuilder = new StringBuilder();
        stBuilder.append("Total Interest: ").append(Calc.getTotalInt());
        stBuilder.append("Total Principal: ").append(Calc.getTotalPrn());
        stBuilder.append("Total Paid: ").append(Calc.getTotalInt() + Calc.getTotalPrn());
        Utilities.printTable(tb_emi);
    }//GEN-LAST:event_btn_prntActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Do you want to reset the fields?", "Reset - EMI Calculator", JOptionPane.YES_NO_OPTION) == 0) {
            txt_period.setText("");
            txt_principal.setText("");
            txt_roi.setText("");
            lb_intPaid.setText("0.0");
            lb_prnPaid.setText("0.0");
            lb_Paid.setText("0.0");
            mn_Report.setEnabled(false);
            dft.setRowCount(0);
        }
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_calcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcActionPerformed
        if (initValues()) {
            ln = new Loan(t_principal, t_roi, t_period, t_prepaid);
            ls_EMI = Calc.calcEMI(ln, t_prepaid);
            Iterator it = ls_EMI.iterator();
            if (dft.getRowCount() > 0) {
                dft.setRowCount(0);
            }

            EMI emi;
            int i = 0;
            while (it.hasNext()) {
                emi = ((EMI) it.next());
                dft.addRow(new Object[]{++i, emi.getEmi(), emi.getIntPart(), emi.getPrnPart(), (emi.getE_principal() < 0) ? 0 : emi.getE_principal(), emi.getE_period(), emi.getIntPartOpt(), emi.getPrnPartOpt(), (emi.getE_principalOpt() < 0) ? 0 : emi.getE_principalOpt()
                });
            }
            lb_intPaid.setText(Calc.getTotalInt() + "");
            lb_prnPaid.setText(Calc.getTotalPrn() + "");
            lb_Paid.setText((Calc.getTotalInt() + Calc.getTotalPrn()) + "");
            mn_Report.setEnabled(true); // Enabling Reporting features only after EMI is calculated...
            tb_emi.setCellSelectionEnabled(true);
            tb_emi.setRowSelectionAllowed(true);
            tb_emi.setColumnSelectionAllowed(true);
        }
    }//GEN-LAST:event_btn_calcActionPerformed

    private void btn_calcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_calcMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_calcMouseClicked

    private void txt_periodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_periodActionPerformed
        btn_calcActionPerformed(evt);
    }//GEN-LAST:event_txt_periodActionPerformed

    private void btn_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exportActionPerformed
        Utilities.exportTOExcel(dft, ln_info);
    }//GEN-LAST:event_btn_exportActionPerformed

    private boolean initValues() {
        if (txt_principal.getText().isEmpty() || txt_period.getText().isEmpty() || txt_roi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter all the fields..");
            return false;
        }
        t_principal = Double.parseDouble(txt_principal.getText());
        t_period = Integer.parseInt(txt_period.getText());
        t_roi = Double.parseDouble(txt_roi.getText());
        t_prepaid = Double.parseDouble(tx_prepaid.getText().trim());

        // initializing the loan information map for exporting purpose
        ln_info.put("Loan Amount", t_principal + "");
        ln_info.put("Interest", t_roi + "");
        ln_info.put("Period", t_period + "");

        return true;
    }

    private void applyTheme(String themeName) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (themeName.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this.getRootPane());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        final MainFrame mFrame = new MainFrame();
//        Utilities.applyTheme("Windows", mFrame);

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                mFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calc;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_export;
    private javax.swing.JButton btn_prnt;
    private javax.swing.JButton btn_reset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lb_Paid;
    private javax.swing.JLabel lb_intPaid;
    private javax.swing.JLabel lb_prnPaid;
    private javax.swing.JMenuItem mn_Exit;
    private javax.swing.JMenu mn_File;
    private javax.swing.JMenuItem mn_Prvsnl;
    private javax.swing.JMenu mn_Report;
    private javax.swing.JMenuItem mn_Summary;
    private eu.hansolo.custom.SteelCheckBox steelCheckBox1;
    private javax.swing.JTable tb_emi;
    private javax.swing.JMenuItem theme_AluOxide;
    private javax.swing.JMenuItem theme_Motif;
    private javax.swing.JMenuItem theme_Nimbus;
    private javax.swing.JMenuItem theme_default;
    private javax.swing.JTextField tx_prepaid;
    private javax.swing.JTextField txt_period;
    private javax.swing.JTextField txt_principal;
    private javax.swing.JTextField txt_roi;
    // End of variables declaration//GEN-END:variables
}
